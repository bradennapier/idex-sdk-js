/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from 'ethers';
import type {
  IPool,
  IPoolInterface,
} from '../../../../contracts/bridge-adapters/ExchangeStargateAdapter.sol/IPool';

const _abi = [
  {
    inputs: [],
    name: 'feeLibrary',
    outputs: [
      {
        internalType: 'contract IStargateFeeLibrary',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sharedDecimals',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'token',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class IPool__factory {
  static readonly abi = _abi;
  static createInterface(): IPoolInterface {
    return new Interface(_abi) as IPoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IPool {
    return new Contract(address, _abi, runner) as unknown as IPool;
  }
}
