/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from 'ethers';
import type {
  IStargateReceiver,
  IStargateReceiverInterface,
} from '../../../../contracts/bridge-adapters/ExchangeStargateAdapter.sol/IStargateReceiver';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId',
        type: 'uint16',
      },
      {
        internalType: 'bytes',
        name: 'srcAddress',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amountLD',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
    ],
    name: 'sgReceive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class IStargateReceiver__factory {
  static readonly abi = _abi;
  static createInterface(): IStargateReceiverInterface {
    return new Interface(_abi) as IStargateReceiverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): IStargateReceiver {
    return new Contract(address, _abi, runner) as unknown as IStargateReceiver;
  }
}
