/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
  PythOraclePriceAdapter,
  PythOraclePriceAdapterInterface,
} from '../../../contracts/oracle-price-adapters/PythOraclePriceAdapter';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string[]',
        name: 'baseAssetSymbols',
        type: 'string[]',
      },
      {
        internalType: 'bytes32[]',
        name: 'priceIds',
        type: 'bytes32[]',
      },
      {
        internalType: 'address',
        name: 'pyth_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'baseAssetSymbol',
        type: 'string',
      },
      {
        internalType: 'bytes32',
        name: 'priceId',
        type: 'bytes32',
      },
    ],
    name: 'addBaseAssetSymbolAndPriceId',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'adminWallet',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'baseAssetSymbolsByPriceId',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'baseAssetSymbol',
        type: 'string',
      },
    ],
    name: 'loadPriceForBaseAssetSymbol',
    outputs: [
      {
        internalType: 'uint64',
        name: 'price',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ownerWallet',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    name: 'priceIdsByBaseAssetSymbol',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pyth',
    outputs: [
      {
        internalType: 'contract IPyth',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'removeAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'removeOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IExchange',
        name: 'exchange_',
        type: 'address',
      },
    ],
    name: 'setActive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'setAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'setOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x604060a08152346200048c57620017f490813803806200001f8162000525565b9384398201916060818403126200048c5780516001600160401b0393908481116200048c578201601f928284830112156200048c578151936200006c620000668662000561565b62000525565b918293868452602080940184600598891b830101918783116200048c57858101915b838310620004a55750505050828101518881116200048c578101948083870112156200048c578551620000c5620000668262000561565b9685808984815201928a1b8201019283116200048c579085808b95949301915b83831062000491575050505001516001600160a01b038116959094908686036200048c5760008054336001600160a01b031991821681178355600180549092161781559790963b15620004485760805284518251036200040457869886995b62000168575b885161122a9081620005ca823960805181818160f00152610a2d0152f35b855160ff8b1690811015620003fd576200018381886200059e565b515115620003b9576200019781856200059e565b51156200038257620001aa81886200059e565b51620001b782866200059e565b518952600287528a8920908051908482116200036e5782548c81811c9116801562000363575b8a8210146200034f57908189849311620002fe575b50899089831160011462000291578c9262000285575b5050600019600383901b1c1916908b1b1790555b6200024e866200023a6200023184886200059e565b51938a6200059e565b51818d519382858094519384920162000579565b810160038152030190205560ff809a16998a146200027157988701988762000144565b634e487b7160e01b87526011600452602487fd5b01519050388062000208565b848d528a8d208e94509190601f1984168e5b8d828210620002de5750508411620002c4575b505050811b0190556200021c565b015160001960f88460031b161c19169055388080620002b6565b91929395968291958786015181550195019301908f9594939291620002a3565b909150838c52898c2089808501891c8201928c861062000345575b918f9186959493018a1c01915b82811062000336575050620001f2565b8e81558594508f910162000326565b9250819262000319565b634e487b7160e01b8c52602260045260248cfd5b90607f1690620001dd565b634e487b7160e01b8b52604160045260248bfd5b895162461bcd60e51b815260048101879052601060248201526f125b9d985b1a59081c1c9a58d948125160821b6044820152606490fd5b895162461bcd60e51b815260048101879052601960248201527f496e76616c696420626173652061737365742073796d626f6c000000000000006044820152606490fd5b506200014a565b875162461bcd60e51b815260048101859052601860248201527f417267756d656e74206c656e677468206d69736d6174636800000000000000006044820152606490fd5b885162461bcd60e51b815260048101869052601d60248201527f496e76616c6964205079746820636f6e747261637420616464726573730000006044820152606490fd5b600080fd5b825181528b955091810191879101620000e5565b82518c81116200048c5782019089603f830112156200048c5787820151908d821162000510578c8b620004e0848b01601f19168c0162000525565b9184835284860101116200048c57620005048a94938f948695868501910162000579565b8152019201916200008e565b60246000634e487b7160e01b81526041600452fd5b6040519190601f01601f191682016001600160401b038111838210176200054b57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116200054b5760051b60200190565b60005b8381106200058d5750506000910152565b81810151838201526020016200057c565b8051821015620005b35760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c90816313af403514610d25578163246f8b9614610cac57816336b19cd714610c59578163701406a914610964578163704b6c02146108355781639335dcb7146107e45781639a202d4714610768578163a375825d14610367578163a5179327146102ec578163c06e0ada1461029b578163d7c67fca14610118575063f98d06f0146100a757600080fd5b3461011457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610114576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b82843461029857602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610114573581526002835281812082518285829491845461016781610f54565b9182865283860196600192838116908160001461023957506001146101df575b848a887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8c6101ba848d0385610e47565b6101d68551968795818752519283809288015287870190610f31565b01168101030190f35b9080949550528383205b8284106102235750505082010185827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6101ba610187565b80548885018601528795509284019281016101e9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016895250505050151560051b830101905085827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6101ba610187565b80fd5b8390346101145760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610114573573ffffffffffffffffffffffffffffffffffffffff8116036102985780f35b8284346102985760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102985782359067ffffffffffffffff821161029857506020610343819461035593369101610eb7565b81845193828580945193849201610f31565b81016003815203019020549051908152f35b83833461011457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101145767ffffffffffffffff8335818111610764576103b69036908601610eb7565b60249081359360019673ffffffffffffffffffffffffffffffffffffffff88541633036107095785156106ae57858752602094600286526103f983892054610f54565b6106535761040984511515611071565b82519484519587818188019861042081838c610f31565b81016003815203019020546105f857878952600287528389209285519283116105ce57505061044f8254610f54565b601f8111610588575b508598601f82116001146104ed5781808a9b6104b49a9b926104c2575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91921b9260031b1c19161790555b51938492839251928391610f31565b810160038152030190205580f35b87015191507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610475565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0811699838a52878a20908a5b8c81106105735750826104b49a9b9c1061053c575b5050811b0190556104a5565b8601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690558a80610530565b8782015183559184019190890190890161051b565b828952868920601f830160051c8101918884106105c4575b601f0160051c01908a905b8281106105b9575050610458565b8a8155018a906105ab565b90915081906105a0565b60418a917f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b601f91508660649451937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f416c726561647920616464656420626173652061737365742073796d626f6c006044820152fd5b506016848660649451937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f416c7265616479206164646564207072696365204944000000000000000000006044820152fd5b601084602060649451937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f496e76616c6964207072696365204944000000000000000000000000000000006044820152fd5b601b84602060649451937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f43616c6c6572206d7573742062652041646d696e2077616c6c657400000000006044820152fd5b8380fd5b833461029857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610298576107b973ffffffffffffffffffffffffffffffffffffffff8254163314610fa7565b7fffffffffffffffffffffffff00000000000000000000000000000000000000006001541660015580f35b50503461011457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101145773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b919050346109605760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126109605781359173ffffffffffffffffffffffffffffffffffffffff9182841680940361095c57610898838654163314610fa7565b6108a384151561100c565b60015492831684146108da5750507fffffffffffffffffffffffff0000000000000000000000000000000000000000161760015580f35b90602060849251917f08c379a00000000000000000000000000000000000000000000000000000000083528201526024808201527f4d75737420626520646966666572656e742066726f6d2063757272656e74206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152fd5b8480fd5b8280fd5b82843461029857602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101145767ffffffffffffffff91813583811161011457856109bb6109cd9236908601610eb7565b81875193828580945193849201610f31565b8101600381520301902054906109e4821515611071565b8451917f96834ad300000000000000000000000000000000000000000000000000000000835283830152602490608083838173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa928315610c4d578193610ba0575b50600886845194015160030b610a77838660070b136110d6565b017fffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000008112637fffffff821317610b2057858160030b91838312600014610b4a5750508103808060030b03610b2057610ad563ffffffff87921661113b565b16938415610af7575050508216045b1690610af18215156110d6565b51908152f35b6012907f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b506011847f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b81925063ffffffff610b6091969495961661113b565b1691160292848416938403610b7757505050610ae4565b6011907f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b9092506080813d8211610c45575b81610bbb60809383610e47565b81010312610960578551906080820182811087821117610c1a57875280518060070b810361095c57825287810151868116810361095c5788830152868101518060030b810361095c579060609188840152015160608201529187610a5d565b83856041887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b3d9150610bae565b508551903d90823e3d90fd5b50503461011457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101145760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b833461029857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610298577fffffffffffffffffffffffff00000000000000000000000000000000000000008154610d1f73ffffffffffffffffffffffffffffffffffffffff82163314610fa7565b16815580f35b919050346109605760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126109605781359173ffffffffffffffffffffffffffffffffffffffff9182841680940361095c578454928316610d8a813314610fa7565b610d9585151561100c565b8414610dc55750507fffffffffffffffffffffffff00000000000000000000000000000000000000001617815580f35b90602060849251917f08c379a00000000000000000000000000000000000000000000000000000000083528201526024808201527f4d75737420626520646966666572656e742066726f6d2063757272656e74206f60448201527f776e6572000000000000000000000000000000000000000000000000000000006064820152fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610e8857604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b81601f82011215610f2c5780359067ffffffffffffffff8211610e885760405192610f0a60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185610e47565b82845260208383010111610f2c57816000926020809301838601378301015290565b600080fd5b60005b838110610f445750506000910152565b8181015183820152602001610f34565b90600182811c92168015610f9d575b6020831014610f6e57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691610f63565b15610fae57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f43616c6c6572206d757374206265204f776e65722077616c6c657400000000006044820152fd5b1561101357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c69642077616c6c65742061646472657373000000000000000000006044820152fd5b1561107857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c696420626173652061737365742073796d626f6c000000000000006044820152fd5b156110dd57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f556e6578706563746564206e6f6e2d706f7369746976652070726963650000006044820152fd5b80156111ee57600190602081108216604e82108316176111d7578190600a925b8082116111a85750508167ffffffffffffffff048111611179570290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b90928067ffffffffffffffff048111611179578184166111ce575b800292811c9061115b565b809202916111c3565b9050600a0a9067ffffffffffffffff821161117957565b5060019056fea26469706673582212208d20334151e2741237e4606d57477559dfff3a1976888f997dd1dc69eeba47f064736f6c63430008120033';

type PythOraclePriceAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PythOraclePriceAdapterConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PythOraclePriceAdapter__factory extends ContractFactory {
  constructor(...args: PythOraclePriceAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    baseAssetSymbols: string[],
    priceIds: BytesLike[],
    pyth_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      baseAssetSymbols,
      priceIds,
      pyth_,
      overrides || {},
    );
  }
  override deploy(
    baseAssetSymbols: string[],
    priceIds: BytesLike[],
    pyth_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(
      baseAssetSymbols,
      priceIds,
      pyth_,
      overrides || {},
    ) as Promise<
      PythOraclePriceAdapter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null,
  ): PythOraclePriceAdapter__factory {
    return super.connect(runner) as PythOraclePriceAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PythOraclePriceAdapterInterface {
    return new Interface(_abi) as PythOraclePriceAdapterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): PythOraclePriceAdapter {
    return new Contract(
      address,
      _abi,
      runner,
    ) as unknown as PythOraclePriceAdapter;
  }
}
