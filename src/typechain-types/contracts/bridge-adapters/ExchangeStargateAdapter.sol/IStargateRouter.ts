/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from 'ethers';
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from '../../../common';

export declare namespace IStargateRouter {
  export type LzTxObjStruct = {
    dstGasForCall: BigNumberish;
    dstNativeAmount: BigNumberish;
    dstNativeAddr: BytesLike;
  };

  export type LzTxObjStructOutput = [
    dstGasForCall: bigint,
    dstNativeAmount: bigint,
    dstNativeAddr: string,
  ] & { dstGasForCall: bigint; dstNativeAmount: bigint; dstNativeAddr: string };
}

export interface IStargateRouterInterface extends Interface {
  getFunction(
    nameOrSignature: 'factory' | 'quoteLayerZeroFee' | 'swap',
  ): FunctionFragment;

  encodeFunctionData(functionFragment: 'factory', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'quoteLayerZeroFee',
    values: [
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike,
      IStargateRouter.LzTxObjStruct,
    ],
  ): string;
  encodeFunctionData(
    functionFragment: 'swap',
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      AddressLike,
      BigNumberish,
      BigNumberish,
      IStargateRouter.LzTxObjStruct,
      BytesLike,
      BytesLike,
    ],
  ): string;

  decodeFunctionResult(functionFragment: 'factory', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'quoteLayerZeroFee',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'swap', data: BytesLike): Result;
}

export interface IStargateRouter extends BaseContract {
  connect(runner?: ContractRunner | null): IStargateRouter;
  waitForDeployment(): Promise<this>;

  interface: IStargateRouterInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent,
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent,
  ): Promise<this>;

  factory: TypedContractMethod<[], [string], 'view'>;

  quoteLayerZeroFee: TypedContractMethod<
    [
      _dstChainId: BigNumberish,
      _functionType: BigNumberish,
      _toAddress: BytesLike,
      _transferAndCallPayload: BytesLike,
      _lzTxParams: IStargateRouter.LzTxObjStruct,
    ],
    [[bigint, bigint]],
    'view'
  >;

  swap: TypedContractMethod<
    [
      _dstChainId: BigNumberish,
      _srcPoolId: BigNumberish,
      _dstPoolId: BigNumberish,
      _refundAddress: AddressLike,
      _amountLD: BigNumberish,
      _minAmountLD: BigNumberish,
      _lzTxParams: IStargateRouter.LzTxObjStruct,
      _to: BytesLike,
      _payload: BytesLike,
    ],
    [void],
    'payable'
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment,
  ): T;

  getFunction(
    nameOrSignature: 'factory',
  ): TypedContractMethod<[], [string], 'view'>;
  getFunction(
    nameOrSignature: 'quoteLayerZeroFee',
  ): TypedContractMethod<
    [
      _dstChainId: BigNumberish,
      _functionType: BigNumberish,
      _toAddress: BytesLike,
      _transferAndCallPayload: BytesLike,
      _lzTxParams: IStargateRouter.LzTxObjStruct,
    ],
    [[bigint, bigint]],
    'view'
  >;
  getFunction(
    nameOrSignature: 'swap',
  ): TypedContractMethod<
    [
      _dstChainId: BigNumberish,
      _srcPoolId: BigNumberish,
      _dstPoolId: BigNumberish,
      _refundAddress: AddressLike,
      _amountLD: BigNumberish,
      _minAmountLD: BigNumberish,
      _lzTxParams: IStargateRouter.LzTxObjStruct,
      _to: BytesLike,
      _payload: BytesLike,
    ],
    [void],
    'payable'
  >;

  filters: {};
}
